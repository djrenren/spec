(module
    (func (param $x handle)
        (segment.free (segment.new (i32.const 1))))

    (func (param $x handle) (result handle)
        (handle.slice
            (local.get $x)
            (i32.const 0)
            (i32.const 4)))

    (func (param $x handle) (result handle)
        (handle.add
            (local.get $x)
            (i32.const 0)))

    (func (param $x handle) (result handle)
        (handle.sub
            (local.get $x)
            (i32.const 0)))

  (func (export "i32_segment_load") (param $h handle) (param $i i32) (result i32)
	(i32.segment.store (local.get $h) (i32.const 8) (local.get $i))
	(i32.segment.load (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load (local.get $h) (i32.const 8))
  )
  (func (export "f32_segment_load") (param $h handle) (param $i f32) (result f32)
	(f32.segment.store (local.get $h) (i32.const 8) (local.get $i))
	(f32.segment.load (local.get $h) (i32.const 8))
  )
  (func (export "f64_segment_load") (param $h handle) (param $i f64) (result f64)
	(f64.segment.store (local.get $h) (i32.const 8) (local.get $i))
	(f64.segment.load (local.get $h) (i32.const 8))
  )

  ;; Sign and zero extending memory loads
  (func (export "i32_segment_load8_s") (param $h handle) (param $i i32) (result i32)
	(i32.segment.store8 (local.get $h) (i32.const 8) (local.get $i))
	(i32.segment.load8_s (local.get $h) (i32.const 8))
  )
  (func (export "i32_segment_load8_u") (param $h handle) (param $i i32) (result i32)
	(i32.segment.store8 (local.get $h) (i32.const 8) (local.get $i))
	(i32.segment.load8_u (local.get $h) (i32.const 8))
  )
  (func (export "i32_segment_load16_s") (param $h handle) (param $i i32) (result i32)
	(i32.segment.store16 (local.get $h) (i32.const 8) (local.get $i))
	(i32.segment.load16_s (local.get $h) (i32.const 8))
  )
  (func (export "i32_segment_load16_u") (param $h handle) (param $i i32) (result i32)
	(i32.segment.store16 (local.get $h) (i32.const 8) (local.get $i))
	(i32.segment.load16_u (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load8_s") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store8 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load8_s (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load8_u") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store8 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load8_u (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load16_s") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store16 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load16_s (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load16_u") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store16 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load16_u (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load32_s") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store32 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load32_s (local.get $h) (i32.const 8))
  )
  (func (export "i64_segment_load32_u") (param $h handle) (param $i i64) (result i64)
	(i64.segment.store32 (local.get $h) (i32.const 8) (local.get $i))
	(i64.segment.load32_u (local.get $h) (i32.const 8))
  ))